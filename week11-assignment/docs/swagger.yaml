basePath: /api/v1
definitions:
  main.Book:
    properties:
      author:
        type: string
      category:
        description: ฟิลด์ใหม่
        type: string
      cover_image:
        type: string
      created_at:
        type: string
      description:
        type: string
      discount:
        type: integer
      id:
        type: integer
      is_new:
        type: boolean
      isbn:
        type: string
      language:
        type: string
      original_price:
        type: number
      pages:
        type: integer
      price:
        type: number
      publisher:
        type: string
      rating:
        type: number
      reviews_count:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      year:
        type: integer
    type: object
  main.ErrorResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple example of using Gin with Swagger.
  title: Simple API Example
  version: "1.0"
paths:
  /books:
    get:
      description: Get all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Book'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get all books
      tags:
      - Books
    post:
      consumes:
      - application/json
      description: Add a new book to the database
      parameters:
      - description: Book details
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/main.Book'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Create a new book
      tags:
      - Books
  /books/{id}:
    delete:
      description: Remove a book from the database by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Delete a book
      tags:
      - Books
    get:
      description: Get detail of book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Book'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get Book by Id
      tags:
      - Books
    put:
      consumes:
      - application/json
      description: Update a book’s details using its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated book details
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/main.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Update an existing book
      tags:
      - Books
  /books/discounted:
    get:
      description: Get books that have a discount > 0
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Book'
            type: array
      summary: Get discounted books
      tags:
      - Books
  /books/featured:
    get:
      description: Get books with high rating (>= 4.5)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Book'
            type: array
      summary: Get featured books
      tags:
      - Books
  /books/new:
    get:
      description: Get the most recently added books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Book'
            type: array
      summary: Get newly added books
      tags:
      - Books
  /books/search:
    get:
      description: Search books by title or author
      parameters:
      - description: Keyword to search (title or author)
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Book'
            type: array
      summary: Search books by keyword
      tags:
      - Books
  /categories:
    get:
      description: Return a list of unique categories from books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: Get all unique book categories
      tags:
      - Categories
swagger: "2.0"
